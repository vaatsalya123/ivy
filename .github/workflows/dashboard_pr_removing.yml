name: Ivy Dashboard Remove Reviewed PR
on:
  pull_request_target:
    types: [converted_to_draft, review_request_removed, closed]
  pull_request_review:
    types: [submitted]

jobs:
  pr_remove:
    name: Remove PR from Dashboard
    if: ${{ github.event.pull_request }}
    runs-on: ubuntu-latest
    steps:
      - name: Checks
        uses: actions/checkout@v2
        with:
          path: ivy
          persist-credentials: false
      - name: Generate Token
        id: generate_token
        uses: tibdex/github-app-token@v1
        with:
          app_id: ${{ secrets.PR_APP_ID }}
          private_key: ${{ secrets.PR_APP_PEM }}
      - name: Get Project Data
        env:
          GITHUB_TOKEN: ${{ steps.generate_token.outputs.token }}
          ORGANIZATION: unifyai
          PROJECT_NUMBER: 1
        run: |
          gh api graphql -f query='
            query($org: String!, $number: Int!) {
              organization(login: $org){
                projectNext(number: $number) {
                  id
                  fields(first:20) {
                    nodes {
                      id
                      name
                      settings
                    }
                  }
                }
              }
            }' -f org=$ORGANIZATION -F number=$PROJECT_NUMBER > project_data.json

          echo 'PROJECT_ID='$(jq '.data.organization.projectNext.id' project_data.json) >> $GITHUB_ENV

      - name: Get item_id of PR
        env:
          GITHUB_TOKEN: ${{ steps.generate_token.outputs.token }}
          PR_ID: ${{ github.event.pull_request.node_id }}
        run: |
          item_id="$( gh api graphql -f query='
            mutation($project:ID!, $pr:ID!) {
              addProjectNextItem(input: {projectId: $project, contentId: $pr}) {
                projectNextItem {
                  id
                }
              }
            }' -f project=$PROJECT_ID -f pr=$PR_ID --jq '.data.addProjectNextItem.projectNextItem.id')"

          echo 'ITEM_ID='$item_id >> $GITHUB_ENV

      - name: Remove PR from Project
        env:
          GITHUB_TOKEN: ${{ steps.generate_token.outputs.token }}
        run: |
          gh api graphql -f query='
            mutation($project:ID!, $item:ID!) {
              deleteProjectNextItem(input: {projectId: $project, itemId: $item}) {
                    deletedItemId
                }
              }' -f project=$PROJECT_ID -f item=$ITEM_ID --silent
